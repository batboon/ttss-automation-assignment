name: JMeter Performance Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  jmeter-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Install JMeter 5.6.3 from Apache Distribution
        run: |
          wget https://dlcdn.apache.org//jmeter/binaries/apache-jmeter-5.6.3.tgz
          tar -xvzf apache-jmeter-5.6.3.tgz
          sudo mv apache-jmeter-5.6.3 /opt/jmeter
          echo "JMeter installed at /opt/jmeter"

      - name: Install JMeter Plugins Manager
        run: |
          wget https://jmeter-plugins.org/get/ -O /opt/jmeter/lib/ext/jmeter-plugins-manager.jar
          java -cp /opt/jmeter/lib/ext/jmeter-plugins-manager.jar org.jmeterplugins.repository.PluginManagerCMDInstaller

      - name: Install JMeter CMD Runner
        run: |
          /opt/jmeter/bin/PluginsManagerCMD.sh install jpgc-cmd
          wget https://repo1.maven.org/maven2/kg/apc/cmdrunner/2.3/cmdrunner-2.3.jar -P /opt/jmeter/lib/
          ls -l /opt/jmeter/lib/
          ls -l /opt/jmeter/lib/ext/
          ls -l /opt/jmeter/bin/

      - name: Install JMeter Plugins CLI runner & Stepping Thread Group
        run: |
          /opt/jmeter/bin/PluginsManagerCMD.sh install jpgc-casutg
          /opt/jmeter/bin/PluginsManagerCMD.sh install jpgc-synthesis

      - name: Add JMeter to PATH, Verify Installation, And Run JMeter Tests
        run: |
          export JMETER_HOME=/opt/jmeter
          export PATH=$PATH:$JMETER_HOME/bin
          echo $PATH
          jmeter -v
          jmeter -n -t tests/test_plan.jmx -l results/result.jtl -e -o reports/

      - name: Generate aggregated report
        run: |
          ls -l /opt/jmeter/lib/
          ls -l /opt/jmeter/lib/ext/
          ls -l /opt/jmeter/bin/
          cat /opt/jmeter/bin/JMeterPluginsCMD.sh
          /opt/jmeter/bin/JMeterPluginsCMD.sh --plugin-type AggregateReport --input-jtl results/result.jtl --generate-csv reports/aggregate_report.csv

      - name: Upload JMeter Results as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          include-hidden-files: true
          path: |
            results/result.jtl
            reports/statistics.json
            reports/aggregate_report.csv

      - name: Test Datadog API Key
        run: |
          curl -v -X GET "https://api.us5.datadoghq.com/api/v1/validate" \
            -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}"

      - name: Install gzip
        run: sudo apt-get install gzip

      - name: Compress JTL and JSON file with gzip
        run: |
          gzip -k results/result.jtl
          gzip -k reports/statistics.json
          gzip -k reports/aggregate_report.csv

      - name: Send JMeter Result and Summary to Datadog via API
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
            -H "Content-Encoding: gzip" \
            --data-binary  @results/result.jtl.gz \
            "https://http-intake.logs.us5.datadoghq.com/api/v2/logs"

          curl -X POST \
            -H "Content-Type: application/json" \
            -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
            -H "Content-Encoding: gzip" \
            --data-binary  @reports/aggregate_report.csv.gz \
            "https://http-intake.logs.us5.datadoghq.com/api/v2/logs"

          curl -X POST \
            -H "Content-Type: application/json" \
            -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
            -H "Content-Encoding: gzip" \
            --data-binary  @reports/statistics.json.gz \
            "https://http-intake.logs.us5.datadoghq.com/api/v2/logs"
